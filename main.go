// Code generated by hertz generator.

package main

import (
	"Refined_service/biz/config"
	"Refined_service/biz/dal"
	_ "Refined_service/docs"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app/middlewares/server/recovery"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/hertz-contrib/cors"
	_ "github.com/hertz-contrib/swagger"
	"github.com/spf13/viper"
	_ "github.com/swaggo/files"
	"time"
)

func main() {
	defer func() {
		err := viper.WriteConfig()
		if err != nil {
			panic(fmt.Errorf("Fatal error in saving config file: %s\n", err))
		}
	}()
	config.Init()
	dal.Init()
	address := viper.GetString("server.host") + ":" + viper.GetString("server.port")
	h := server.New(server.WithHostPorts(address))
	h.Name = "Refined Server"
	h.Use(recovery.Recovery())
	h.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"*"},
		AllowMethods:     []string{"*"},
		AllowHeaders:     []string{"*"},
		ExposeHeaders:    []string{"*"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	})) // CORS
	h.Static("/static", "./")
	register(h)
	h.Spin()
}
