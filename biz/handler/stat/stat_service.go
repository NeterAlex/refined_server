// Code generated by hertz generator.

package stat

import (
	"Refined_service/biz/dal/sql"
	"Refined_service/biz/model/comment"
	"Refined_service/biz/model/post"
	stat "Refined_service/biz/model/stat"
	"Refined_service/biz/model/user"
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// QueryStat .
// @router /v1/stat/query [GET]
func QueryStat(ctx context.Context, c *app.RequestContext) {
	var err error
	if err != nil {
		c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_ParamInvalid, Msg: err.Error()})
		return
	}
	res := new(stat.Stat)
	if res.CommentCount, err = sql.Count[comment.Comment](); err != nil {
		c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_DbError, Msg: err.Error()})
		return
	}
	if res.PostCount, err = sql.Count[post.Post](); err != nil {
		c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_DbError, Msg: err.Error()})
		return
	}
	if res.UserCount, err = sql.Count[user.User](); err != nil {
		c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_DbError, Msg: err.Error()})
		return
	}
	if res.TotalViewed, err = sql.SumColumn[post.Post]("viewed"); err != nil {
		c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_DbError, Msg: err.Error()})
		return
	}
	c.JSON(consts.StatusOK, &stat.QueryStatResponse{Code: stat.Code_Success, Stat: res})
}
